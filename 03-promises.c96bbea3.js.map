{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,EACdC,cAAc,IAGhB,IAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAchB,EAAUiB,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEnB,WAAUiB,UAEpBG,EAAO,CAAEpB,WAAUiB,S,GAEpBA,E,IAIPJ,EAAKW,iBAAiB,UAEtB,SAA8BC,GAC5BA,EAAMC,iBAKN,IAJA,IAAMC,EAASd,EAAKc,OAAOC,MACvBC,EAAQC,OAAOjB,EAAKI,MAAMW,OACxBG,EAAOD,OAAOjB,EAAKkB,KAAKH,OAErBI,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAAG,CAEnChB,EADegB,EACSH,GACrBI,MAAK,SAAAC,G,IAAGlC,EAAQkC,EAARlC,SAAUiB,EAAKiB,EAALjB,MACjBrB,EAAAF,GAASG,OAAOsC,QACd,uBAAwCC,OAAfpC,EAAS,QAAYoC,OAANnB,EAAM,M,IAGjDoB,OAAM,SAAAH,G,IAAGlC,EAAQkC,EAARlC,SAAUiB,EAAKiB,EAALjB,MAClBrB,EAAAF,GAASG,OAAOyC,QACd,sBAAqCF,OAAfpC,EAAS,QAAYoC,OAANnB,EAAM,M,IAGjDY,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  rtl: false,\n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  plainText: true,\n  showOnlyTheLastOne: false,\n  clickToClose: false,\n  pauseOnHover: true,\n});\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', handlerSubmitPromise);\n\nfunction handlerSubmitPromise(event) {\n  event.preventDefault();\n  const amount = form.amount.value;\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","amount","value","delay1","Number","step","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.c96bbea3.js.map"}